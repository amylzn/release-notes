# This is a basic workflow to help you get started with Actions

name: Release Notes

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    types:
      - opened
      - synchronize # testing

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  generate-release-notes:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for "Add to release notes" checkbox
        id: check_checkbox
        run: |
          PR_BODY="${{ github.event.pull_request.body }}"
          echo "DEBUG: PR Body content: $PR_BODY"
          if [[ "$PR_BODY" =~ "- [x] Add to release notes" ]]; then
            echo "add_to_release_notes=true" >> $GITHUB_OUTPUT # Set output using GITHUB_OUTPUT
          else
            echo "add_to_release_notes=false" >> $GITHUB_OUTPUT # Set output using GITHUB_OUTPUT
          fi
        shell: bash

      - name: Append PR title to release_notes.md
        if: steps.check_checkbox.outputs.add_to_release_notes == 'true'
        run: |
          echo "Value of add_to_release_notes: ${{ steps.check_checkbox.outputs.add_to_release_notes }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          TODAY_DATE=$(date +'%Y-%m-%d') # Get today's date in YYYY-MM-DD format

          echo "# Release on $TODAY_DATE" >> release_notes.md
          echo "## PR: $PR_TITLE" >> release_notes.md
          echo "" >> release_notes.md # Add an empty line for spacing
          echo "$PR_BODY" >> release_notes.md
          echo "" >> release_notes.md # Add an empty line after the PR body

      - name: Commit and push changes
        if: steps.check_checkbox.outputs.add_to_release_notes == 'true'
        run: |
          # Configure Git user name and email for the commit
          git config user.name "GitHub Actions [Bot]" 
          git config user.email "github-actions[bot]@users.noreply.github.com" 
      
          # Stage the changes to release_notes.md
          git add release_notes.md 
      
          # Commit the changes
          git commit -m "Docs: Update release notes [skip ci]" 
      
          # Push the changes to the main branch
          git push origin main

      - name: Log "Not adding to release notes"
        if: steps.check_checkbox.outputs.add_to_release_notes == 'false'
        run: | 
          echo "Not adding to release notes: Checkbox not found or not checked."
