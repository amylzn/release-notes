# This is a basic workflow to help you get started with Actions

name: Release Notes

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    types:
      - opened

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  generate-release-notes:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for "Add to release notes" checkbox
        id: check_checkbox
        run: |
          PR_BODY="${{ github.event.pull_request.body }}"
          echo "DEBUG: PR Body content: $PR_BODY"
          if [[ "$PR_BODY" =~ "- [x] Add to release notes" ]]; then
            echo "add_to_release_notes=true" >> $GITHUB_OUTPUT # Set output using GITHUB_OUTPUT
          else
            echo "add_to_release_notes=false" >> $GITHUB_OUTPUT # Set output using GITHUB_OUTPUT
          fi
        shell: bash

      - name: Append PR title to release_notes.md
        if: steps.check_checkbox.outputs.add_to_release_notes == 'true'
        run: |
          echo "Value of add_to_release_notes: ${{ steps.check_checkbox.outputs.add_to_release_notes }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "- $PR_TITLE" >> release_notes.md

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Add the modified file to the staging area
          git add release_notes.md

          # Commit the changes locally
          git commit -m "docs: Add PR #${{ github.event.pull_request.number }} to release notes"

          # Pull the latest changes from the remote and rebase your local commits on top
          # This integrates remote changes before pushing your new commit
          git pull --rebase origin ${{ github.event.pull_request.base.ref }}

          # Push to the base branch of the pull request
          git push origin HEAD:${{ github.event.pull_request.base.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log "Not adding to release notes"
        if: steps.check_checkbox.outputs.add_to_release_notes == 'false'
        run: | 
          echo "Not adding to release notes: Checkbox not found or not checked."
